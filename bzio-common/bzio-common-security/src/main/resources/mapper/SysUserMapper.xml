<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.bzio.common.security.mapper.SysUserMapper">

    <resultMap type="org.bzio.common.security.entity.SysUser" id="SysUserMap">
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="certificateType" column="certificate_type" jdbcType="VARCHAR"/>
        <result property="certificateNum" column="certificate_num" jdbcType="VARCHAR"/>
        <result property="mobileNumber" column="mobile_number" jdbcType="VARCHAR"/>
        <result property="phoneNumber" column="phone_number" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="fax" column="fax" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="loginIp" column="login_ip" jdbcType="VARCHAR"/>
        <result property="loginDate" column="login_date" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createName" column="create_name" jdbcType="VARCHAR"/>
        <result property="createDate" column="create_date" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateName" column="update_name" jdbcType="VARCHAR"/>
        <result property="updateDate" column="update_date" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="selectUser">
        select
            u.user_id, u.username, u.password, u.nickname, u.birthday, u.sex, u.certificate_type, u.certificate_num,
            u.mobile_number, u.phone_number, u.email, u.fax, u.avatar, u.status, u.del_flag, u.login_ip, u.login_date,
            u.create_by, u.create_name, u.create_date, u.update_by, u.update_name, u.update_date,
            u.remark
        from sys_user u
    </sql>

    <select id="queryByUserId" resultMap="SysUserMap">
        <include refid="selectUser"/>
        where u.user_id = #{userId}
    </select>

    <select id="queryByUsername" resultMap="SysUserMap">
        <include refid="selectUser"/>
        where u.username = #{username}
    </select>

    <!--查询指定行数据-->
    <select id="queryAll" resultType="org.bzio.common.security.vo.SysUserVo">
        select
        u.user_id "userId", u.username, u.password, u.nickname, u.birthday, u.sex, 
        u.certificate_type "certificateType", u.certificate_num "certificateNum",
        u.mobile_number "mobileNumber", u.phone_number "phoneNumber", u.email, u.fax, 
        u.avatar, u.status, u.del_flag "delFlag", u.login_ip "loginIp", u.login_date "loginDate",
        u.create_by "createBy", u.create_name "createName", u.create_date "createDate", 
        u.update_by "updateBy", u.update_name "updateName", u.update_date "updateDate",
        u.remark, 
        d.dept_id "deptId", d.dept_name "deptName"
        from sys_user u
        left join sys_user_dept ud on ud.user_id=u.user_id
        left join sys_dept d on d.dept_id=ud.dept_id
        <where>
            <if test="userId != null and userId != ''">
                and u.user_id = #{userId}
            </if>
            <if test="username != null and username != ''">
                and u.username like concat('%', #{username}, '%')
            </if>
            <if test="nickname != null and nickname != ''">
                and u.nickname like concat('%', #{nickname}, '%')
            </if>
            <if test="birthday != null">
                and u.birthday = #{birthday}
            </if>
            <if test="sex != null">
                and u.sex = #{sex}
            </if>
            <if test="certificateNum != null and certificateNum != ''">
                and u.certificate_num = #{certificateNum}
            </if>
            <if test="mobileNumber != null and mobileNumber != ''">
                and u.mobile_number = #{mobileNumber}
            </if>
            <if test="phoneNumber != null and phoneNumber != ''">
                and u.phone_number = #{phoneNumber}
            </if>
            <if test="email != null and email != ''">
                and u.email = #{email}
            </if>
            <if test="fax != null and fax != ''">
                and u.fax = #{fax}
            </if>
            <if test="status != null and status != ''">
                and u.status = #{status}
            </if>
            <if test="delFlag != null">
                and u.del_flag = #{delFlag}
            </if>
            <if test="loginIp != null and loginIp != ''">
                and u.login_ip = #{loginIp}
            </if>
            <if test="loginDate != null">
                and u.login_date = #{loginDate}
            </if>
            <if test="deptId != null and deptId != ''">
                and d.dept_id = #{deptId}
            </if>
        </where>
        order by u.username
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">
        insert into sys_user(user_id, username, password, nickname, birthday, sex, certificate_type, certificate_num, mobile_number, phone_number, email, fax, avatar, status, del_flag, login_ip, login_date, create_by, create_name, create_date, update_by, update_name, update_date, remark)
        values (#{userId}, #{username}, #{password}, #{nickname}, #{birthday}, #{sex}, #{certificateType}, #{certificateNum}, #{mobileNumber}, #{phoneNumber}, #{email}, #{fax}, #{avatar}, #{status}, #{delFlag}, #{loginIp}, #{loginDate}, #{createBy}, #{createName}, #{createDate}, #{updateBy}, #{updateName}, #{updateDate}, #{remark})
    </insert>

    <insert id="insertBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into sys_user(username, password, nickname, birthday, sex, certificate_type, certificate_num, mobile_number, phone_number, email, fax, avatar, status, del_flag, login_ip, login_date, create_by, create_name, create_date, update_by, update_name, update_date, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.username}, #{entity.password}, #{entity.nickname}, #{entity.birthday}, #{entity.sex}, #{entity.certificateType}, #{entity.certificateNum},  #{enetity.mobileNumber}, #{entity.phoneNumber}, #{entity.email}, #{entity.fax}, #{entity.avatar}, #{entity.status}, #{entity.delFlag}, #{entity.loginIp}, #{entity.loginDate}, #{entity.createBy}, #{entity.createName}, #{entity.createDate}, #{entity.updateBy}, #{entity.updateName}, #{entity.updateDate}, #{entity.remark})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into sys_user(username, password, nickname, birthday, sex, certificate_type, certificate_num, mobile_number, phone_number, email, fax, avatar, status, del_flag, login_ip, login_date, create_by, create_name, create_date, update_by, update_name, update_date, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.nickname}, #{entity.birthday}, #{entity.sex}, #{entity.certificateType}, #{entity.certificateNum}, #{enetity.mobileNumber}, #{entity.phoneNumber}, #{entity.email}, #{entity.fax}, #{entity.avatar}, #{entity.status}, #{entity.delFlag}, #{entity.loginIp}, #{entity.loginDate}, #{entity.createBy}, #{entity.createName}, #{entity.createDate}, #{entity.updateBy}, #{entity.updateName}, #{entity.updateDate}, #{entity.remark})
        </foreach>
        on duplicate key update
        username = values(username),
        password = values(password),
        nickname = values(nickname),
        birthday = values(birthday),
        sex = values(sex),
        certificate_type = values(certificate_type),
        certificate_num = values(certificate_num),
        mobile_number = values(mobile_number),
        phone_number = values(phone_number),
        email = values(email),
        fax = values(fax),
        avatar = values(avatar),
        status = values(status),
        del_flag = values(del_flag),
        login_ip = values(login_ip),
        login_date = values(login_date),
        create_by = values(create_by),
        create_name = values(create_name),
        create_date = values(create_date),
        update_by = values(update_by),
        update_name = values(update_name),
        update_date = values(update_date),
        remark = values(remark)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update sys_user
        <set>
            username = #{username},
            nickname = #{nickname},
            birthday = #{birthday},
            sex = #{sex},
            certificate_type = #{certificateType},
            certificate_Num = #{certificateNum},
            mobile_number = #{mobileNumber},
            phone_number = #{phoneNumber},
            email = #{email},
            fax = #{fax},
            avatar = #{avatar},
            status = #{status},
            del_flag = #{delFlag},
            login_ip = #{loginIp},
            login_date = #{loginDate},
            create_by = #{createBy},
            create_name = #{createName},
            create_date = #{createDate},
            update_by = #{updateBy},
            update_name = #{updateName},
            update_date = #{updateDate},
            remark = #{remark},
        </set>
        where user_id = #{userId}
    </update>

    <update id="updateLoginInfo">
        update sys_user set login_ip = #{loginIp}, login_date = #{loginDate} where user_id = #{userId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteByUsername">
        delete from sys_user where username = #{username}
    </delete>
    
    <update id="changeStatus">
        update sys_user set status = #{status} where user_id = #{userId}
    </update>
</mapper>

